# -*- coding: utf-8 -*-
# Generated by Django 1.11.2 on 2017-10-18 00:58
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AtcdCher',
            fields=[
                ('idatcd_cher', models.AutoField(primary_key=True, serialize=False)),
                ('n1', models.TextField(blank=True, null=True)),
                ('annee1', models.DateField(blank=True, null=True)),
                ('n2', models.TextField(blank=True, null=True)),
                ('annee2', models.DateField(blank=True, null=True)),
                ('n3', models.TextField(blank=True, null=True)),
                ('anne3', models.DateField(blank=True, null=True)),
                ('commentaires', models.TextField(blank=True, null=True)),
                ('is_compli_throm', models.IntegerField(blank=True, null=True)),
                ('compli_throm', models.TextField(blank=True, null=True)),
                ('atcd_fam', models.IntegerField(blank=True, null=True)),
                ('photo', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'atcd_cher',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='BilanBiologique',
            fields=[
                ('idbilan_biologique', models.AutoField(primary_key=True, serialize=False)),
                ('date', models.DateField(blank=True, null=True)),
                ('neutrophiles', models.IntegerField(blank=True, null=True)),
                ('hct', models.IntegerField(blank=True, null=True)),
                ('globules_blancs', models.FloatField(blank=True, null=True)),
                ('anomalies_formule', models.IntegerField(blank=True, null=True)),
                ('hb', models.FloatField(blank=True, null=True)),
                ('reticulocytes', models.FloatField(blank=True, null=True)),
                ('plaquettes', models.FloatField(blank=True, null=True)),
                ('creatine', models.FloatField(blank=True, null=True)),
                ('clairance_creatinine_cockcroft', models.FloatField(blank=True, null=True)),
                ('mdrd', models.FloatField(blank=True, db_column='MDRD', null=True)),
                ('asat', models.FloatField(blank=True, null=True)),
                ('alat', models.FloatField(blank=True, null=True)),
                ('ggt', models.FloatField(blank=True, null=True)),
                ('pal', models.FloatField(blank=True, null=True)),
                ('bilirubine_totale', models.FloatField(blank=True, null=True)),
                ('bilirubine_conjuguee', models.FloatField(blank=True, null=True)),
                ('ldh', models.FloatField(blank=True, null=True)),
                ('homocysteine', models.FloatField(blank=True, null=True)),
                ('vitamine_d', models.FloatField(blank=True, null=True)),
                ('crp', models.FloatField(blank=True, null=True)),
                ('c3', models.FloatField(blank=True, null=True)),
                ('c4', models.FloatField(blank=True, null=True)),
                ('ch50', models.FloatField(blank=True, null=True)),
                ('tq', models.FloatField(blank=True, null=True)),
                ('tca', models.CharField(blank=True, max_length=45, null=True)),
                ('fibrinogene', models.FloatField(blank=True, null=True)),
                ('antithrombine', models.FloatField(blank=True, null=True)),
                ('antithrombine_ag', models.FloatField(blank=True, null=True)),
                ('antithrombine_date', models.DateField(blank=True, null=True)),
                ('antithrombine_controle', models.FloatField(blank=True, null=True)),
                ('antithrombine_controle_date', models.DateField(blank=True, null=True)),
                ('protein_s', models.FloatField(blank=True, null=True)),
                ('protein_s_ag', models.FloatField(blank=True, null=True)),
                ('protein_s_date', models.DateField(blank=True, null=True)),
                ('protein_s_controle', models.FloatField(blank=True, null=True)),
                ('protein_s_controle_date', models.DateField(blank=True, null=True)),
                ('protein_c', models.FloatField(blank=True, null=True)),
                ('protein_c_ag', models.FloatField(blank=True, null=True)),
                ('protein_c_date', models.DateField(blank=True, null=True)),
                ('protein_c_controle', models.FloatField(blank=True, null=True)),
                ('protein_c_controle_date', models.DateField(blank=True, null=True)),
                ('f_v_leiden', models.CharField(blank=True, max_length=45, null=True)),
                ('fiig20210a', models.CharField(blank=True, max_length=45, null=True)),
                ('ppl_clotting_time', models.FloatField(blank=True, null=True)),
                ('lag_time', models.FloatField(blank=True, null=True)),
                ('ttpeak', models.CharField(blank=True, max_length=45, null=True)),
                ('peak', models.CharField(blank=True, max_length=45, null=True)),
                ('mri', models.FloatField(blank=True, null=True)),
                ('etp', models.FloatField(blank=True, null=True)),
                ('ct', models.FloatField(blank=True, null=True)),
                ('cft', models.FloatField(blank=True, null=True)),
                ('alpha', models.FloatField(blank=True, null=True)),
                ('ma', models.FloatField(blank=True, null=True)),
                ('fviii', models.FloatField(blank=True, null=True)),
                ('fvw', models.FloatField(blank=True, null=True)),
                ('thromboincode', models.TextField(blank=True, max_length=500, null=True)),
                ('jak2_v617f', models.CharField(blank=True, max_length=45, null=True)),
                ('jak2_exon12', models.CharField(blank=True, max_length=45, null=True)),
                ('mpl', models.CharField(blank=True, max_length=45, null=True)),
                ('calr2', models.CharField(blank=True, max_length=45, null=True)),
                ('sapl', models.IntegerField(blank=True, null=True)),
                ('acc_la', models.IntegerField(blank=True, null=True)),
                ('acl_lgg', models.FloatField(blank=True, null=True)),
                ('acl_lgm', models.FloatField(blank=True, null=True)),
                ('ab2gp1_lgg', models.FloatField(blank=True, null=True)),
                ('ab2gp1_lgm', models.FloatField(blank=True, null=True)),
                ('drvvt', models.FloatField(blank=True, null=True)),
                ('antipe_g', models.CharField(blank=True, max_length=45, null=True)),
                ('antipe_m', models.CharField(blank=True, max_length=45, null=True)),
                ('aav_g', models.CharField(blank=True, max_length=45, null=True)),
                ('antips_pt_g', models.CharField(blank=True, db_column='antips-pt_g', max_length=45, null=True)),
                ('antips_pt_m', models.CharField(blank=True, db_column='antips-pt_m', max_length=45, null=True)),
                ('aan', models.IntegerField(blank=True, null=True)),
                ('type_if', models.CharField(blank=True, max_length=45, null=True)),
                ('ect_type', models.CharField(blank=True, max_length=45, null=True)),
                ('antidna', models.CharField(blank=True, max_length=4, null=True)),
                ('anti_ccp', models.IntegerField(blank=True, null=True)),
                ('fr_i', models.IntegerField(blank=True, null=True)),
                ('anca', models.IntegerField(blank=True, null=True)),
                ('anti_pr3', models.IntegerField(blank=True, null=True)),
                ('anti_mpo', models.IntegerField(blank=True, null=True)),
                ('eps', models.FloatField(blank=True, null=True)),
                ('anticorps_antithy', models.IntegerField(blank=True, null=True)),
                ('trak', models.IntegerField(blank=True, null=True)),
                ('antitpo', models.IntegerField(blank=True, null=True)),
                ('antithyroglobuline', models.IntegerField(blank=True, null=True)),
                ('antitransglutaminases', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'bilan_biologique',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ConsultationSuivi',
            fields=[
                ('idconsultation_suivi', models.AutoField(primary_key=True, serialize=False)),
                ('date_consultation', models.DateField(blank=True, null=True)),
                ('traitemnt_antithrom_enCours', models.IntegerField(blank=True, null=True)),
                ('tae_lequel', models.CharField(blank=True, max_length=100, null=True)),
                ('episode_throm', models.IntegerField(blank=True, null=True)),
                ('episode_throm_lequel', models.CharField(blank=True, max_length=100, null=True)),
                ('episode_hemo', models.IntegerField(blank=True, null=True)),
                ('episode_hemo_lequel', models.CharField(blank=True, max_length=100, null=True)),
                ('date_souvenue', models.DateField(blank=True, null=True)),
                ('compli_traitement_anticoagulant', models.CharField(blank=True, max_length=200, null=True)),
                ('manifNouvPatho', models.CharField(blank=True, max_length=200, null=True)),
                ('grossesEnCours', models.CharField(blank=True, max_length=5, null=True)),
                ('commentaires', models.CharField(blank=True, max_length=5, null=True)),
            ],
            options={
                'db_table': 'consultationSuivi',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Episodes',
            fields=[
                ('idepisodes', models.AutoField(primary_key=True, serialize=False)),
                ('date', models.DateField(blank=True, null=True)),
                ('veine', models.CharField(blank=True, max_length=45, null=True)),
                ('artere', models.CharField(blank=True, max_length=45, null=True)),
                ('facteur_declenchants', models.CharField(blank=True, max_length=45, null=True)),
                ('duree', models.IntegerField(blank=True, null=True)),
                ('type_trait', models.CharField(blank=True, max_length=45, null=True)),
                ('aucun', models.IntegerField(blank=True, null=True)),
                ('tamt_arret_depuis', models.IntegerField(blank=True, null=True)),
                ('antiagregants_plaq', models.CharField(blank=True, max_length=20, null=True)),
                ('dernier_val_antxa', models.IntegerField(blank=True, null=True)),
                ('date_dva', models.DateField(blank=True, null=True)),
                ('heparine', models.IntegerField(blank=True, null=True)),
                ('avk', models.IntegerField(blank=True, null=True)),
                ('dernier_inr', models.CharField(blank=True, max_length=45, null=True)),
                ('date_di', models.DateField(blank=True, null=True)),
                ('aod', models.IntegerField(blank=True, null=True)),
                ('comp_trait', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'episodes',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='EpisodeT',
            fields=[
                ('idepisode_t', models.AutoField(primary_key=True, serialize=False)),
                ('date_imagerie', models.DateField(blank=True, null=True)),
                ('sequelles', models.TextField(blank=True, null=True)),
                ('fac_dec_3m', models.TextField(blank=True, null=True)),
                ('med_episode_t', models.CharField(blank=True, max_length=45, null=True)),
                ('med_episode', models.CharField(blank=True, max_length=45, null=True)),
            ],
            options={
                'db_table': 'episode_t',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ExamenArret',
            fields=[
                ('idexamen_arret', models.AutoField(primary_key=True, serialize=False)),
                ('lag_time', models.FloatField(blank=True, null=True)),
                ('ttpeak', models.FloatField(blank=True, null=True)),
                ('peak', models.FloatField(blank=True, null=True)),
                ('mri', models.FloatField(blank=True, null=True)),
                ('etp', models.FloatField(blank=True, null=True)),
                ('ct', models.FloatField(blank=True, null=True)),
                ('cft', models.FloatField(blank=True, null=True)),
                ('alpha', models.FloatField(blank=True, null=True)),
                ('ma', models.FloatField(blank=True, null=True)),
                ('glob_bla', models.FloatField(blank=True, null=True)),
                ('hb', models.FloatField(blank=True, null=True)),
                ('plaquettes', models.FloatField(blank=True, null=True)),
                ('fibrinogene', models.FloatField(blank=True, null=True)),
                ('fviii', models.FloatField(blank=True, null=True)),
                ('fvw', models.FloatField(blank=True, null=True)),
                ('ddimeres', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'examen_arret',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='FacteurResique',
            fields=[
                ('idfacteur_risque', models.AutoField(primary_key=True, serialize=False)),
                ('poids', models.FloatField(blank=True, null=True)),
                ('taille', models.FloatField(blank=True, null=True)),
                ('bmi', models.FloatField(blank=True, db_column='BMI', null=True)),
                ('atcd_infractus_myocard', models.IntegerField(blank=True, db_column='ATCD_infractus_myocard', null=True)),
                ('atcd_familiaux_mtev', models.IntegerField(blank=True, db_column='ATCD_familiaux_MTEV', null=True)),
                ('atcd_personnels_mtev', models.IntegerField(blank=True, db_column='ATCD_personnels_MTEV', null=True)),
                ('avc_ischemique', models.IntegerField(blank=True, db_column='AVC_ischemique', null=True)),
                ('arteriopathie_mi', models.IntegerField(blank=True, db_column='arteriopathie_MI', null=True)),
                ('coronaropathie', models.IntegerField(blank=True, null=True)),
                ('diabete', models.IntegerField(blank=True, null=True)),
                ('hta', models.IntegerField(blank=True, db_column='HTA', null=True)),
                ('hyperlipid_mie', models.IntegerField(blank=True, db_column='hyperlipidémie', null=True)),
                ('hypo_albuminemie', models.IntegerField(blank=True, null=True)),
                ('insuffisance_cardiaque', models.IntegerField(blank=True, null=True)),
                ('pilule', models.CharField(blank=True, max_length=3, null=True)),
                ('stent_coronaore', models.IntegerField(blank=True, null=True)),
                ('trouble_rythme_cardiaque', models.IntegerField(blank=True, null=True)),
                ('tabac', models.IntegerField(blank=True, null=True)),
                ('varices', models.IntegerField(blank=True, null=True)),
                ('maladie_auto_immune', models.CharField(blank=True, max_length=70, null=True)),
                ('maladie_inflamatoire_c_i', models.CharField(blank=True, max_length=70, null=True)),
                ('syndrome_drepanocytaire_majeur', models.CharField(blank=True, max_length=70, null=True)),
                ('autre_hemoglobinopathie', models.CharField(blank=True, max_length=70, null=True)),
                ('vih', models.IntegerField(blank=True, null=True)),
                ('vih_cd4', models.IntegerField(blank=True, db_column='VIH_CD4', null=True)),
                ('vih_cv', models.IntegerField(blank=True, db_column='VIH_CV', null=True)),
            ],
            options={
                'db_table': 'facteur_resique',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='GrossessInfertilite',
            fields=[
                ('idgrossess_infertilite', models.AutoField(primary_key=True, serialize=False)),
                ('contr_oestr', models.IntegerField(blank=True, null=True)),
                ('duree_co', models.IntegerField(blank=True, null=True)),
                ('date_debut_co', models.DateField(blank=True, null=True)),
                ('pilule_co', models.CharField(blank=True, max_length=45, null=True)),
                ('traitement_sub_men', models.IntegerField(blank=True, null=True)),
                ('traitement_sub_men_lesquel', models.CharField(blank=True, max_length=45, null=True)),
                ('date_tsm', models.DateField(blank=True, null=True)),
                ('endometriose', models.IntegerField(blank=True, null=True)),
                ('infertilit_prim', models.IntegerField(blank=True, db_column='infertilité_prim', null=True)),
                ('raison_fiv', models.CharField(blank=True, max_length=45, null=True)),
                ('nb_embrayons_trans', models.IntegerField(blank=True, null=True)),
                ('embr_cong', models.IntegerField(blank=True, null=True)),
                ('embrayons', models.IntegerField(blank=True, null=True)),
                ('nb_fiv_av_gross', models.IntegerField(blank=True, null=True)),
                ('spontanee', models.IntegerField(blank=True, null=True)),
                ('fiv_icsi', models.IntegerField(blank=True, null=True)),
                ('stimul_clomid', models.IntegerField(blank=True, null=True)),
                ('delai_conception', models.IntegerField(blank=True, null=True)),
                ('ras', models.IntegerField(blank=True, null=True)),
                ('perte_foetal_terme', models.IntegerField(blank=True, null=True)),
                ('terme_sa1', models.CharField(blank=True, max_length=45, null=True)),
                ('diab', models.IntegerField(blank=True, null=True)),
                ('term_sa2', models.CharField(blank=True, max_length=45, null=True)),
                ('hta', models.IntegerField(blank=True, null=True)),
                ('term_sa3', models.CharField(blank=True, max_length=45, null=True)),
                ('rciu', models.IntegerField(blank=True, null=True)),
                ('term_sa4', models.CharField(blank=True, max_length=45, null=True)),
                ('pe', models.IntegerField(blank=True, null=True)),
                ('term_sa5', models.CharField(blank=True, max_length=45, null=True)),
                ('hellp', models.IntegerField(blank=True, null=True)),
                ('term_sa6', models.CharField(blank=True, max_length=45, null=True)),
                ('hrp', models.IntegerField(blank=True, null=True)),
                ('term_sa7', models.CharField(blank=True, max_length=45, null=True)),
                ('thromb_maternelle_pgiu', models.CharField(blank=True, max_length=45, null=True)),
                ('thromb_site', models.CharField(blank=True, max_length=45, null=True)),
                ('term_sa8', models.CharField(blank=True, max_length=45, null=True)),
                ('apgar', models.CharField(blank=True, max_length=45, null=True)),
                ('poids_naiss', models.IntegerField(blank=True, null=True)),
                ('complication_neo', models.IntegerField(blank=True, null=True)),
                ('complication_neo_lesquel', models.CharField(blank=True, max_length=45, null=True)),
                ('traitement_pgiu', models.IntegerField(blank=True, null=True)),
                ('tpgiu_avgross', models.IntegerField(blank=True, null=True)),
                ('aspirine', models.IntegerField(blank=True, null=True)),
                ('aspirine_dose', models.IntegerField(blank=True, null=True)),
                ('hbpm', models.IntegerField(blank=True, null=True)),
                ('hbpm_dose', models.IntegerField(blank=True, null=True)),
                ('iso', models.IntegerField(blank=True, null=True)),
                ('iso_dose', models.IntegerField(blank=True, null=True)),
                ('curatif', models.IntegerField(blank=True, null=True)),
                ('curatif_dose', models.IntegerField(blank=True, null=True)),
                ('uvedose', models.IntegerField(blank=True, null=True)),
                ('uvedose_dose', models.IntegerField(blank=True, null=True)),
                ('prednisone', models.IntegerField(blank=True, null=True)),
                ('prednisone_dose', models.IntegerField(blank=True, null=True)),
                ('dose_dose', models.IntegerField(blank=True, null=True)),
                ('progsterion', models.IntegerField(blank=True, null=True)),
                ('progsterion_dose', models.IntegerField(blank=True, null=True)),
                ('hydroxychloroquine', models.IntegerField(blank=True, null=True)),
                ('hydroxychloroquine_dose', models.IntegerField(blank=True, null=True)),
                ('plac_gross_poids', models.IntegerField(blank=True, null=True)),
                ('hem_dec_base', models.IntegerField(blank=True, null=True)),
                ('nidf', models.IntegerField(blank=True, null=True)),
                ('siege_nidf', models.CharField(blank=True, max_length=45, null=True)),
                ('infarctus', models.IntegerField(blank=True, null=True)),
                ('signe_infractus', models.CharField(blank=True, max_length=45, null=True)),
                ('nb_infractus', models.IntegerField(blank=True, null=True)),
                ('thromb_art', models.IntegerField(blank=True, null=True)),
                ('chorioamniotite', models.IntegerField(blank=True, null=True)),
                ('villites', models.IntegerField(blank=True, null=True)),
                ('intervillites', models.IntegerField(blank=True, null=True)),
                ('vasculopathie_throm', models.IntegerField(blank=True, null=True)),
                ('caryotype_foetus', models.IntegerField(blank=True, null=True)),
                ('malformation_foetus', models.IntegerField(blank=True, null=True)),
                ('maladie_autoimmune', models.IntegerField(blank=True, null=True)),
                ('maladie_autoimmune_lesquel', models.CharField(blank=True, max_length=45, null=True)),
                ('thrombose_art', models.IntegerField(blank=True, null=True)),
                ('date_ta', models.DateField(blank=True, null=True)),
                ('nb_ta', models.IntegerField(blank=True, null=True)),
                ('site_ta', models.CharField(blank=True, max_length=45, null=True)),
                ('thrombose_veineuse', models.IntegerField(blank=True, null=True)),
                ('date_tv', models.DateField(blank=True, null=True)),
                ('nb_tv', models.IntegerField(blank=True, null=True)),
                ('site_tv', models.CharField(blank=True, max_length=45, null=True)),
            ],
            options={
                'db_table': 'grossess_infertilite',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='MyelomeMultiple',
            fields=[
                ('idmyelome_multiple', models.AutoField(primary_key=True, serialize=False)),
                ('type_ig', models.CharField(blank=True, max_length=45, null=True)),
                ('chaine_legere', models.CharField(blank=True, max_length=45, null=True)),
                ('stade_salmon', models.IntegerField(blank=True, null=True)),
                ('iss', models.IntegerField(blank=True, null=True)),
                ('stade_evolutif', models.CharField(max_length=40, null=True)),
                ('temp_ecoule', models.CharField(blank=True, max_length=45, null=True)),
                ('score_ecog', models.IntegerField(blank=True, null=True)),
                ('indice_perf_ocog', models.CharField(blank=True, max_length=45, null=True)),
                ('pathologie_malaincol', models.CharField(blank=True, max_length=45, null=True)),
            ],
            options={
                'db_table': 'myelome_multiple',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='PathologieMalain',
            fields=[
                ('idpathologie_malain', models.AutoField(primary_key=True, serialize=False)),
                ('caractere', models.CharField(blank=True, max_length=45, null=True)),
                ('site_initiale', models.CharField(blank=True, max_length=45, null=True)),
                ('stade', models.CharField(blank=True, max_length=45, null=True)),
                ('statut_evolutif', models.CharField(blank=True, max_length=45, null=True)),
                ('temp_ecoule', models.CharField(blank=True, max_length=45, null=True)),
                ('score_ecog', models.IntegerField(blank=True, null=True)),
                ('indice_perf_ocog', models.CharField(blank=True, max_length=45, null=True)),
                ('pathologie_malaincol', models.CharField(blank=True, max_length=45, null=True)),
            ],
            options={
                'db_table': 'pathologie_malain',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('idpatient', models.AutoField(primary_key=True, serialize=False)),
                ('ipp', models.IntegerField(blank=True, null=True)),
                ('nompatient', models.CharField(max_length=45)),
                ('prenompatient', models.CharField(max_length=45)),
                ('datenaissance', models.DateField(blank=True, null=True)),
                ('groupesanguin', models.CharField(blank=True, max_length=5, null=True)),
                ('telephonepatient', models.CharField(blank=True, max_length=15, null=True)),
                ('servicereference', models.CharField(blank=True, max_length=45, null=True)),
                ('nommedecinreferent', models.CharField(blank=True, max_length=45, null=True)),
                ('prenommedcinreferent', models.CharField(blank=True, max_length=45, null=True)),
                ('telephonemedecinreferent', models.CharField(blank=True, max_length=15, null=True)),
                ('type_consultation', models.CharField(blank=True, max_length=15, null=True)),
                ('sex', models.IntegerField(blank=True, null=True)),
                ('date_consultation', models.CharField(blank=True, max_length=45, null=True)),
                ('premiere_con', models.IntegerField(blank=True, null=True)),
                ('suivi', models.IntegerField(blank=True, null=True)),
                ('consentement_eclaire', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'patient',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Recommandation',
            fields=[
                ('idrecommandation', models.AutoField(primary_key=True, serialize=False)),
                ('type_traitement', models.CharField(blank=True, max_length=45, null=True)),
                ('date_debut', models.DateField(blank=True, null=True)),
                ('date_fin', models.DateField(blank=True, null=True)),
                ('encours', models.IntegerField(blank=True, null=True)),
                ('inr', models.FloatField(blank=True, null=True)),
                ('act_antixa', models.FloatField(blank=True, null=True)),
                ('concentration_xeap', models.FloatField(blank=True, null=True)),
                ('heure_der_prise', models.TimeField(blank=True, null=True)),
                ('heur_prelevemnt', models.TimeField(blank=True, null=True)),
                ('hypera_rsap', models.IntegerField(blank=True, null=True)),
                ('trait', models.CharField(blank=True, max_length=45, null=True)),
                ('lag_time', models.FloatField(blank=True, null=True)),
                ('ttpeak', models.FloatField(blank=True, null=True)),
                ('peak', models.FloatField(blank=True, null=True)),
                ('mri', models.FloatField(blank=True, null=True)),
                ('etp', models.FloatField(blank=True, null=True)),
                ('ct', models.FloatField(blank=True, null=True)),
                ('cft', models.FloatField(blank=True, null=True)),
                ('alpha', models.FloatField(blank=True, null=True)),
                ('ma', models.FloatField(blank=True, null=True)),
                ('glob_bla', models.FloatField(blank=True, null=True)),
                ('hb', models.FloatField(blank=True, null=True)),
                ('plaquettes', models.FloatField(blank=True, null=True)),
                ('fibrinogene', models.FloatField(blank=True, null=True)),
                ('fviii', models.FloatField(blank=True, null=True)),
                ('fvw', models.FloatField(blank=True, null=True)),
                ('ddimeres', models.FloatField(blank=True, null=True)),
                ('complication_hemo', models.FloatField(blank=True, null=True)),
                ('type_com_hemo', models.CharField(blank=True, max_length=45, null=True)),
                ('patient_idpatient', models.ForeignKey(db_column='patient_idpatient', on_delete=django.db.models.deletion.DO_NOTHING, to='hemato.Patient')),
            ],
            options={
                'db_table': 'recommandation',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TraitementAnt',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('methotrexate', models.IntegerField(blank=True, null=True)),
                ('number_6_mercaptopurine', models.IntegerField(blank=True, db_column='6_mercaptopurine', null=True)),
                ('purinethole', models.IntegerField(blank=True, null=True)),
                ('fludarabine', models.IntegerField(blank=True, null=True)),
                ('number_5fu', models.IntegerField(blank=True, db_column='5fu', null=True)),
                ('cytarbine', models.IntegerField(blank=True, null=True)),
                ('hydrea', models.IntegerField(blank=True, null=True)),
                ('asparginase', models.IntegerField(blank=True, null=True)),
                ('chlorambucil', models.IntegerField(blank=True, null=True)),
                ('melphalan', models.IntegerField(blank=True, null=True)),
                ('cyclophosphamide', models.IntegerField(blank=True, null=True)),
                ('nitroso_urees', models.IntegerField(blank=True, null=True)),
                ('derives_platine', models.IntegerField(blank=True, null=True)),
                ('mitomycine', models.IntegerField(blank=True, null=True)),
                ('doxorubicine', models.IntegerField(blank=True, null=True)),
                ('mitoxanthone', models.IntegerField(blank=True, null=True)),
                ('etoposide', models.IntegerField(blank=True, null=True)),
                ('vincristine', models.IntegerField(blank=True, null=True)),
                ('vinblastatine', models.IntegerField(blank=True, null=True)),
                ('taxanes', models.IntegerField(blank=True, null=True)),
                ('rituximab', models.IntegerField(blank=True, null=True)),
                ('autre_immunotherapie', models.CharField(blank=True, max_length=60, null=True)),
                ('daratumumab', models.IntegerField(blank=True, null=True)),
                ('anastrozole', models.IntegerField(blank=True, null=True)),
                ('exemestane', models.IntegerField(blank=True, null=True)),
                ('letrozole', models.IntegerField(blank=True, null=True)),
                ('fulvestrant', models.IntegerField(blank=True, null=True)),
                ('raloxifene', models.IntegerField(blank=True, null=True)),
                ('tamoxifene', models.IntegerField(blank=True, null=True)),
                ('bicalutamide', models.IntegerField(blank=True, null=True)),
                ('cyproterone', models.IntegerField(blank=True, null=True)),
                ('flutamide', models.IntegerField(blank=True, null=True)),
                ('nilutamide', models.IntegerField(blank=True, null=True)),
                ('lenalidomide', models.IntegerField(blank=True, null=True)),
                ('pomalidomide', models.IntegerField(blank=True, null=True)),
                ('thalidomide', models.IntegerField(blank=True, null=True)),
                ('interferon', models.IntegerField(blank=True, null=True)),
                ('anti_vegf', models.IntegerField(blank=True, null=True)),
                ('iptk', models.IntegerField(blank=True, null=True)),
                ('carflizomib', models.IntegerField(blank=True, null=True)),
                ('bortezomib', models.IntegerField(blank=True, null=True)),
                ('busulfan', models.IntegerField(blank=True, null=True)),
                ('bleomycine', models.IntegerField(blank=True, null=True)),
                ('corticoides', models.IntegerField(blank=True, null=True)),
                ('autogreffe', models.IntegerField(blank=True, null=True)),
                ('allogreffe', models.IntegerField(blank=True, null=True)),
                ('anagrelide', models.IntegerField(blank=True, null=True)),
                ('ruxolitinib', models.IntegerField(blank=True, null=True)),
                ('urta', models.CharField(blank=True, max_length=45, null=True)),
                ('catheter_veineux_centrale', models.CharField(blank=True, max_length=45, null=True)),
                ('fac_ris_hem', models.CharField(blank=True, max_length=45, null=True)),
                ('thro_dep_diag_can', models.CharField(blank=True, max_length=45, null=True)),
                ('date_tddc', models.DateField(blank=True, null=True)),
                ('tt_anti', models.CharField(blank=True, max_length=45, null=True)),
                ('date_tta', models.DateField(blank=True, null=True)),
                ('patient_idpatient', models.ForeignKey(db_column='patient_idpatient', on_delete=django.db.models.deletion.DO_NOTHING, to='hemato.Patient')),
            ],
            options={
                'db_table': 'traitement_ant',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TromboseArteriel',
            fields=[
                ('idtrombose_arteriel', models.AutoField(primary_key=True, serialize=False)),
                ('localisation', models.CharField(blank=True, max_length=45, null=True)),
                ('date_diagnostic', models.DateField(blank=True, null=True)),
                ('imagerie_diagnostique', models.CharField(blank=True, max_length=45, null=True)),
                ('changement_traitemnt', models.CharField(blank=True, max_length=45, null=True)),
                ('traitemnt_precedent', models.CharField(blank=True, max_length=45, null=True)),
                ('dose_prec', models.FloatField(blank=True, null=True)),
                ('traitement_antithrombotique', models.CharField(blank=True, max_length=45, null=True)),
                ('dose', models.FloatField(blank=True, null=True)),
                ('date_init_traitement', models.DateField(blank=True, null=True)),
                ('duree_traitement', models.IntegerField(blank=True, null=True)),
                ('recidive', models.IntegerField(blank=True, null=True)),
                ('recdtat_date', models.DateField(blank=True, null=True)),
                ('recdtat_type', models.CharField(blank=True, max_length=45, null=True)),
                ('recdtat_localisation', models.CharField(blank=True, max_length=10000, null=True)),
                ('hemoragie', models.IntegerField(blank=True, null=True)),
                ('date_hemor', models.DateField(blank=True, null=True)),
                ('charactere_hemor', models.CharField(blank=True, max_length=45, null=True)),
                ('patient_idpatient', models.ForeignKey(db_column='patient_idpatient', on_delete=django.db.models.deletion.DO_NOTHING, to='hemato.Patient')),
            ],
            options={
                'db_table': 'trombose_arteriel',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TromboseRecidivant',
            fields=[
                ('idtrombose_recidivant', models.AutoField(primary_key=True, serialize=False)),
                ('aucun', models.IntegerField(blank=True, null=True)),
                ('tamt_arret_depuis', models.IntegerField(blank=True, null=True)),
                ('antiagregants_plaq', models.CharField(blank=True, max_length=20, null=True)),
                ('dernier_val_antxa', models.IntegerField(blank=True, null=True)),
                ('date_dva', models.DateField(blank=True, null=True)),
                ('heparine', models.IntegerField(blank=True, null=True)),
                ('avk', models.IntegerField(blank=True, null=True)),
                ('dernier_inr', models.CharField(blank=True, max_length=45, null=True)),
                ('date_di', models.DateField(blank=True, null=True)),
                ('aod', models.IntegerField(blank=True, null=True)),
                ('comp_trait', models.IntegerField(blank=True, null=True)),
                ('patient_idpatient', models.ForeignKey(db_column='patient_idpatient', on_delete=django.db.models.deletion.DO_NOTHING, to='hemato.Patient')),
            ],
            options={
                'db_table': 'trombose_recidivant',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TromboseVeineuse',
            fields=[
                ('idtrombose_veineuse', models.AutoField(primary_key=True, serialize=False)),
                ('localisation', models.CharField(blank=True, max_length=45, null=True)),
                ('date_diagnostique', models.DateField(blank=True, null=True)),
                ('conditions', models.CharField(blank=True, max_length=45, null=True)),
                ('facteur_declanchant', models.CharField(blank=True, max_length=45, null=True)),
                ('imagerie_diagnostique', models.CharField(blank=True, max_length=45, null=True)),
                ('changement_traitemnt', models.CharField(blank=True, max_length=45, null=True)),
                ('traitemnt_precedent', models.CharField(blank=True, max_length=45, null=True)),
                ('dose_prec', models.FloatField(blank=True, null=True)),
                ('traitement_antithrombotique', models.CharField(blank=True, max_length=45, null=True)),
                ('dose', models.FloatField(blank=True, null=True)),
                ('date_init_traitement', models.DateField(blank=True, null=True)),
                ('duree_traitement', models.IntegerField(blank=True, null=True)),
                ('recidive', models.IntegerField(blank=True, null=True)),
                ('recdtat_date', models.DateField(blank=True, null=True)),
                ('recdtat_type', models.CharField(blank=True, max_length=45, null=True)),
                ('recdtat_localisation', models.CharField(blank=True, max_length=10000, null=True)),
                ('hemoragie', models.IntegerField(blank=True, null=True)),
                ('date_hemor', models.DateField(blank=True, null=True)),
                ('charactere_hemor', models.CharField(blank=True, max_length=45, null=True)),
                ('local_hemor', models.TextField(blank=True, null=True)),
                ('patient_idpatient', models.ForeignKey(db_column='patient_idpatient', on_delete=django.db.models.deletion.DO_NOTHING, to='hemato.Patient')),
            ],
            options={
                'db_table': 'trombose_veineuse',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='VillaltaSyndrome',
            fields=[
                ('idvillalta_syndrome', models.AutoField(primary_key=True, serialize=False)),
                ('pain', models.IntegerField(blank=True, null=True)),
                ('cramps', models.IntegerField(blank=True, null=True)),
                ('heaviness', models.IntegerField(blank=True, null=True)),
                ('paresthesia', models.IntegerField(blank=True, null=True)),
                ('pruritus', models.IntegerField(blank=True, null=True)),
                ('pretibial_edema', models.IntegerField(blank=True, null=True)),
                ('skin_induration', models.IntegerField(blank=True, null=True)),
                ('hyperpigmentation', models.IntegerField(blank=True, null=True)),
                ('redness', models.IntegerField(blank=True, null=True)),
                ('venous_ectasia', models.IntegerField(blank=True, null=True)),
                ('pain_calf_com', models.IntegerField(blank=True, null=True)),
                ('venous_ulcers', models.IntegerField(blank=True, null=True)),
                ('score', models.IntegerField(blank=True, null=True)),
                ('patient_idpatient', models.ForeignKey(db_column='patient_idpatient', on_delete=django.db.models.deletion.DO_NOTHING, to='hemato.Patient')),
            ],
            options={
                'db_table': 'villalta_syndrome',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='pathologiemalain',
            name='patient_idpatient',
            field=models.ForeignKey(db_column='patient_idpatient', on_delete=django.db.models.deletion.DO_NOTHING, to='hemato.Patient'),
        ),
        migrations.AddField(
            model_name='myelomemultiple',
            name='patient_idpatient',
            field=models.ForeignKey(db_column='patient_idpatient', on_delete=django.db.models.deletion.DO_NOTHING, to='hemato.Patient'),
        ),
        migrations.AddField(
            model_name='grossessinfertilite',
            name='patient_idpatient',
            field=models.ForeignKey(db_column='patient_idpatient', on_delete=django.db.models.deletion.DO_NOTHING, to='hemato.Patient'),
        ),
        migrations.AddField(
            model_name='facteurresique',
            name='patient_idpatient',
            field=models.ForeignKey(db_column='patient_idpatient', on_delete=django.db.models.deletion.DO_NOTHING, to='hemato.Patient'),
        ),
        migrations.AddField(
            model_name='examenarret',
            name='patient_idpatient',
            field=models.ForeignKey(db_column='patient_idpatient', on_delete=django.db.models.deletion.DO_NOTHING, to='hemato.Patient'),
        ),
        migrations.AddField(
            model_name='episodet',
            name='patient_idpatient',
            field=models.ForeignKey(db_column='patient_idpatient', on_delete=django.db.models.deletion.DO_NOTHING, to='hemato.Patient'),
        ),
        migrations.AddField(
            model_name='episodes',
            name='patient_idpatient',
            field=models.ForeignKey(db_column='patient_idpatient', on_delete=django.db.models.deletion.DO_NOTHING, to='hemato.Patient'),
        ),
        migrations.AddField(
            model_name='consultationsuivi',
            name='patient_idpatient',
            field=models.ForeignKey(db_column='patient_idpatient', on_delete=django.db.models.deletion.DO_NOTHING, to='hemato.Patient'),
        ),
        migrations.AddField(
            model_name='bilanbiologique',
            name='patient_idpatient',
            field=models.ForeignKey(db_column='patient_idpatient', on_delete=django.db.models.deletion.DO_NOTHING, to='hemato.Patient'),
        ),
        migrations.AddField(
            model_name='atcdcher',
            name='patient_idpatient',
            field=models.ForeignKey(db_column='patient_idpatient', on_delete=django.db.models.deletion.DO_NOTHING, to='hemato.Patient'),
        ),
        migrations.AlterUniqueTogether(
            name='villaltasyndrome',
            unique_together=set([('idvillalta_syndrome', 'patient_idpatient')]),
        ),
        migrations.AlterUniqueTogether(
            name='tromboseveineuse',
            unique_together=set([('idtrombose_veineuse', 'patient_idpatient')]),
        ),
        migrations.AlterUniqueTogether(
            name='tromboserecidivant',
            unique_together=set([('idtrombose_recidivant', 'patient_idpatient')]),
        ),
        migrations.AlterUniqueTogether(
            name='trombosearteriel',
            unique_together=set([('idtrombose_arteriel', 'patient_idpatient')]),
        ),
        migrations.AlterUniqueTogether(
            name='traitementant',
            unique_together=set([('id', 'patient_idpatient')]),
        ),
        migrations.AlterUniqueTogether(
            name='recommandation',
            unique_together=set([('idrecommandation', 'patient_idpatient')]),
        ),
        migrations.AlterUniqueTogether(
            name='pathologiemalain',
            unique_together=set([('idpathologie_malain', 'patient_idpatient')]),
        ),
        migrations.AlterUniqueTogether(
            name='myelomemultiple',
            unique_together=set([('idmyelome_multiple', 'patient_idpatient')]),
        ),
        migrations.AlterUniqueTogether(
            name='grossessinfertilite',
            unique_together=set([('idgrossess_infertilite', 'patient_idpatient')]),
        ),
        migrations.AlterUniqueTogether(
            name='facteurresique',
            unique_together=set([('idfacteur_risque', 'patient_idpatient')]),
        ),
        migrations.AlterUniqueTogether(
            name='examenarret',
            unique_together=set([('idexamen_arret', 'patient_idpatient')]),
        ),
        migrations.AlterUniqueTogether(
            name='episodet',
            unique_together=set([('idepisode_t', 'patient_idpatient')]),
        ),
        migrations.AlterUniqueTogether(
            name='episodes',
            unique_together=set([('idepisodes', 'patient_idpatient')]),
        ),
        migrations.AlterUniqueTogether(
            name='consultationsuivi',
            unique_together=set([('idconsultation_suivi', 'patient_idpatient')]),
        ),
        migrations.AlterUniqueTogether(
            name='bilanbiologique',
            unique_together=set([('idbilan_biologique', 'patient_idpatient')]),
        ),
        migrations.AlterUniqueTogether(
            name='atcdcher',
            unique_together=set([('idatcd_cher', 'patient_idpatient')]),
        ),
    ]
